#calc {
  display: flex;
  height: 100vh;
  justify-content: center;
  align-content: center;
  align-items: center;
  overflow: hidden;
}

#grid-container {
  display: grid;
  grid-template-columns: repeat(4, 100px);
  grid-template-rows: minmax(100px, auto) repeat(5, 80px);
  gap: 5px;
}

.display {
  grid-column: 1 / -1;
  background-color: #eee;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: flex-end;
  border-radius: 10px;
}

button {
  background-color: #eee;
  border: none;
  border-radius: 10px;
}

#zero {
  grid-column: span 2;
}

.operator, .clear, .sign, .percent, .equals {
  box-shadow: 1px 1px 2px 1px rgba(0, 0, 255, .2);
}

.operator:active {
  background-color: rgba(0, 0, 255, .2);
}


/*

When A is '' && no sign chosen => inputA
When A is not '' and a sign was chosen => inputB
When A is '' cannot choose a sign
When A is not '' a sign was chosen and B is not '' => operate(a, b, op)



*/